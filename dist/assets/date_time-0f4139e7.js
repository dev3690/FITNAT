const l=r=>{const n=new Date(r),o=n.getUTCFullYear(),a=String(n.getUTCMonth()+1).padStart(2,"0"),e=String(n.getUTCDate()).padStart(2,"0"),t=`${o}-${a}-${e}`;return console.log(t),t},g=r=>{const n=new Date,o=new Date(r.start_date),a=new Date(r.end_date),e=Math.ceil((a-o)/(7*24*60*60*1e3));return{currentWeek:Math.ceil((n-o)/(7*24*60*60*1e3)),totalWeeks:e}},d=(r,n)=>{const o=new Date(r),a=new Date(n),e=[];if(o>a)throw new Error("Start date must be before end date");let t=new Date(o);for(t.setDate(t.getDate()+7);t<=a;)e.push(new Date(t)),t.setDate(t.getDate()+7);if(t>a){console.log(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");let D=!0;e.forEach(c=>{c.getDate()==new Date(a).getDate()&&(D=!1)}),D&&e.push(new Date(a))}let s=e==null?void 0:e.findIndex(D=>new Date<D);return console.log("DIFF",e,s+1,new Date().getDate()),{currWeek:s+1,isNotify:e[s==-1?0:s].getDay()-2==new Date().getDay()}};export{g as c,l as f,d as g};
